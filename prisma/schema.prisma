// This is your Prisma schema file,
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// model Modules {
//   id          String   @id @default(uuid())
//   name        String   @unique
//   description String
//   created_at  DateTime @default(now())

//   @@map("modules")
// }

// model Courses {
//   id          String   @id @default(uuid())
//   name        String   @unique
//   description String?
//   duration    Int
//   created_at  DateTime @default(now())

//   teacher       Teachers @relation(fields: [fk_id_teacher], references: [id])
//   fk_id_teacher String   @unique

//   @@map("courses")
// }

// model Teachers {
//   id   String @id @default(uuid())
//   name String @unique

//   course Courses?

//   @@map("teachers")
// }

model Courses {
  id          String           @id @default(uuid())
  name        String           @unique
  description String?
  duration    Int
  created_at  DateTime         @default(now())
  modules     CoursesModules[]

  @@map("courses")
}

model Modules {
  id          String           @id @default(uuid())
  name        String           @unique
  description String
  created_at  DateTime         @default(now())
  
  courses     CoursesModules[]

  @@map("modules")
}

model CoursesModules {
  id           String   @id @default(uuid())
  
  // chave estrangeira de Courses
  course       Courses  @relation(fields: [fk_id_course], references: [id])
  fk_id_course String
  
  // chave estrangeira de modules
  module       Modules  @relation(fields: [fk_id_module], references: [id])
  fk_id_module String
  
  created_at   DateTime @default(now())

  @@map("courses_modules")
}



model Authors {
  id  String @id @default(uuid())
  name String @unique

  Books Books[]

  @@map("authors")
}

model Books {
  id  String @id @default(uuid())
  name String @unique

  author_id String
  author  Authors @relation(fields: [author_id], references: [id])

  @@map("books")
}